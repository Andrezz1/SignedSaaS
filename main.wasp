app SignedProject {
  wasp: {
    version: "^0.16.2"
  },
  title: "SignedProject",
  auth: {
    userEntity: Utilizador, 
    methods: {
      usernameAndPassword: {
        userSignupFields: import { getUserFields } from "@src/services/auth/userSignupFields"
      }
    },
    onAuthFailedRedirectTo: "/login"
  }
}

route TesteRoute { path: "/teste", to: TestePage }
page TestePage {
  component: import { Teste } from "@src/pages/Teste"
}

route DashboardRoute { path: "/dashboard", to: DashboardPage }
page DashboardPage {
  component: import { Dashboard } from "@src/pages/dashboardPage/Dashboard"
}

route SignUpRoute { path: "/signup", to: SignUpPage }
page SignUpPage {
  component: import { Signup } from "@src/pages/auth/SignUp"
}

route LoginRoute { path: "/login", to: LoginPage }
page LoginPage {
  component: import { Login } from "@src/pages/auth/Login"
}

// As queries abaixo apenas obtêm os dados de cada tabela
query getCodigoPostal {
  fn: import { getCodigoPostal } from "@src/services/codigoPostalService",
  entities: [CodigoPostal]
}

query getComprovativo {
  fn: import { getComprovativo } from "@src/services/comprovativoService",
  entities: [Comprovativo]
}

query getContacto {
  fn: import { getContacto } from "@src/services/contactoService",
  entities: [Contacto]
}

query getDetalheSubscricao {
  fn: import { getDetalheSubscricao } from "@src/services/detalheSubscricaoService",
  entities: [DetalheSubscricao]
}

query getDoacao {
  fn: import { getDoacao } from "@src/services/doacaoService",
  entities: [Doacao]
}

query getMorada {
  fn: import { getMorada } from "@src/services/moradaService",
  entities: [Morada]
}

query getPagamento {
  fn: import { getPagamento } from "@src/services/pagamentoService",
  entities: [Pagamento] 
}

query getSubscricao {
  fn: import { getSubscricao } from "@src/services/subscricaoService",
  entities: [Subscricao]
}

query getTipoSubscricao {
  fn: import { getTipoSubscricao } from "@src/services/tipoSubscricaoService",
  entities: [TipoSubscricao]
}

query getTipoUtilizador {
  fn: import { getTipoUtilizador } from "@src/services/tipoUtilizadorService",
  entities: [TipoUtilizador]
}

query getUtilizadores {
  fn: import { getUtilizadores } from "@src/services/utilizadorService",
  entities: [Utilizador]
}

// As queries Abaixo obtêm dados de multiplas tabelas
query getComprovativoInfo {
  fn: import { getComprovativoInfo } from "@src/services/comprovativoService",
  entities: [Comprovativo, Pagamento, Subscricao, Utilizador]
}

query getDetalheSubscricaoInfo {
  fn: import { getDetalheSubscricaoInfo } from "@src/services/detalheSubscricaoService",
  entities: [DetalheSubscricao, Subscricao, TipoSubscricao]
}

query getDoacaoInfo {
  fn: import { getDoacaoInfo } from "@src/services/doacaoService",
  entities: [Doacao, Utilizador]
}

query getMoradaInfo {
  fn: import { getMoradaInfo } from "@src/services/moradaService",
  entities: [Morada, CodigoPostal]
}

query getPagamentoInfo {
  fn: import { getPagamentoInfo } from "@src/services/pagamentoService",
  entities: [Pagamento, Utilizador]
}

query getSubscricaoInfo {
  fn: import { getSubscricaoInfo } from "@src/services/subscricaoService",
  entities: [Subscricao, Utilizador, Pagamento, TipoSubscricao]
}

query getUtilizadoresInfo {
  fn: import { getUtilizadoresInfo } from "@src/services/utilizadorService",
  entities: [Utilizador, TipoUtilizador, Morada, Contacto, Subscricao]
}

// As queries abaixo são queries com filtros

query getUtilizadorByNIF {
  fn: import { getUtilizadorByNIF } from "@src/services/utilizadorService",
  entities: [Utilizador]
}

query getComprovativoByUtilizadorId {
  fn: import { getComprovativoByUtilizadorId } from "@src/services/comprovativoService",
  entities: [Utilizador, Comprovativo]
}

query getDoacaoByUtilizadorId {
  fn: import { getDoacaoByUtilizadorId } from "@src/services/doacaoService",
  entities: [Doacao, Utilizador]
}

query getUtilizadorDesabilitado {
  fn: import { getUtilizadorDesabilitado } from "@src/services/utilizadorService",
  entities: [Utilizador]
}

query getPagamentoByUtilizadorId {
  fn: import { getPagamentoByUtilizadorId } from "@src/services/pagamentoService",
  entities: [Pagamento, Utilizador]
}

query getSubscricaoByUtilizadorId {
  fn: import { getSubscricaoByUtilizadorId } from "@src/services/subscricaoService",
  entities: [Subscricao, Utilizador]
}

// As actions abaixo servem para adicionar novos dados a base de dados

action createUtilizador {
  fn: import { createUtilizador } from "@src/services/utilizadorService",
  entities: [Utilizador, Morada, TipoUtilizador, Contacto, CodigoPostal]
}

action createTipoSubscricao {
  fn: import { createTipoSubscricao } from "@src/services/tipoSubscricaoService",
  entities: [TipoSubscricao]
}

// As actions abaixo servem para alterar dados da base de dados

action updateSubscricaoStatus {
  fn: import { updateSubscricaoStatus } from "@src/services/subscricaoService",
  entities: [Subscricao]
}

action updateUtilizador {
  fn: import { updateUtilizador } from "@src/services/utilizadorService",
  entities: [Utilizador, Morada, TipoUtilizador, Contacto, CodigoPostal]
}

action updateTipoSubscricao {
  fn:import { updateTipoSubscricao } from "@src/services/tipoSubscricaoService",
  entities: [TipoSubscricao]
}

action updateEstadoUtilizador {
  fn: import { updateEstadoUtilizador } from "@src/services/utilizadorService",
  entities: [Utilizador]
}

// action createAdminUser {
//   fn: import { createAdminUser } from "@src/services/auth",
//   entities: [Utilizador]
// }

// action createNonAdminUser {
//   fn: import { createNonAdminUser } from "@src/services/auth",
//   entities: [Utilizador, Morada, TipoUtilizador, Contacto, CodigoPostal]
// }
